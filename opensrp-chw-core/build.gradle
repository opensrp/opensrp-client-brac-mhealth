apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
    repositories {
        google()
        jcenter()
        mavenLocal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
    }
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion 28
    buildToolsVersion androidBuildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        google()
        jcenter()
    }

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            systemProperty 'robolectric.enabledSdks', '28'
            jvmArgs '-noverify'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api('org.smartregister:opensrp-client-native-form:2.6.61-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'cardview-v7'
        exclude group: 'com.android.support', module: 'support-media-compat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'io.ona.rdt-capture', module: 'lib'
    }
 //brac-hnpp branch
    api('org.smartregister:opensrp-client-core:4.7.60-p2-invalid-brac-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.lecho', module: 'hellocharts-library'
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.rengwuxian.materialedittext', module: 'library'
    }

    api('org.smartregister:opensrp-client-configurable-views:1.1.2-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    //brac-hnpp branch

    api('org.smartregister:opensrp-client-family:1.2.28-brac-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    //dghs_ha branch
    api('org.smartregister:opensrp-client-immunization:1.4.20-dghs-ha-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
//    implementation('org.smartregister:opensrp-client-immunization:2.4.6-SNAPSHOT') {
//        transitive = true
//        exclude group: 'org.smartregister', module: 'opensrp-client-core'
//        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
//        exclude group: 'com.android.support', module: 'appcompat-v7'
//    }

    api('org.smartregister:opensrp-client-reporting:0.0.5-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.lecho', module: 'hellocharts-library'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
    }


    api('org.smartregister:opensrp-client-chw-anc:0.1.15-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'org.smartregister', module: 'opensrp-client-immunization'
    }

    api('org.smartregister:opensrp-client-chw-pnc:0.0.12-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-chw-anc'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'org.smartregister', module: 'opensrp-client-immunization'
    }

    api('org.smartregister:opensrp-client-chw-malaria:1.0.11-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    api 'com.google.guava:guava:20.0'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    api 'io.reactivex.rxjava2:rxjava:2.1.5'
    api 'com.evernote:android-job:1.2.6'
    api 'org.greenrobot:eventbus:3.1.1'
    api "org.smartregister:android-p2p-sync:0.3.2-SNAPSHOT"

    api('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }

    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.0.1'
    testImplementation 'org.robolectric:shadows-multidex:3.8'
    testImplementation 'org.robolectric:shadows-support-v4:3.4-rc2'
    // PowerMock
    def powerMockVersion = '1.7.1'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"

}


task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        html {
            html.enabled = true
            destination file("${buildDir}/reports/jacoco/jacocoRootReport/chw-core-coverage")
        }

        xml {
            xml.enabled = true
            destination file("${buildDir}/reports/jacoco/jacocoRootReport/chw-core-coverage.xml")
        }
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
